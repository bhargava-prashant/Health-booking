version: '3.8'

services:
  client:
    build: ./client
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - booking-service
      - doctor-service
      - admin-service
    command: ["npm", "run", "dev"]
    networks:
      - app-network

  auth-service:
    build: ./auth-service
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=postgres  # Changed to the correct service name
      - DB_PORT=5432
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASS=mypassword
    command: ["npm", "start"]
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://auth-service:5000/health', res => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  booking-service:
    build: ./booking-service
    ports:
      - "5001:5001"
    environment:
      - DB_HOST=postgres  # Updated to correct service name
      - DB_PORT=5432
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASS=mypassword
    command: ["npm", "start"]
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5001/health', res => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  doctor-service:
    build: ./doctor-service
    ports:
      - "5002:5002"
    environment:
      - DB_HOST=postgres  # Corrected service name
      - DB_PORT=5432
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASS=mypassword
    command: ["npm", "start"]
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5002/health', res => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  admin-service:
    build: ./admin-service
    ports:
      - "5003:5003"
    environment:
      - DB_HOST=postgres  # Correct service name
      - DB_PORT=5432
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASS=mypassword
    command: ["npm", "start"]
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5003/health', res => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
